
AVRASM ver. 2.1.30  D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\adc\Avr-adc\List\adc.asm Mon Aug 04 00:07:58 2014

D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\adc\Avr-adc\List\adc.asm(1072): warning: Register r5 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\adc\Avr-adc\List\adc.asm(1073): warning: Register r4 already defined by the .DEF directive
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\adc\Avr-adc\List\adc.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6f76
000034 746c
000035 6761
000036 2065      	.DB  0x76,0x6F,0x6C,0x74,0x61,0x67,0x65,0x20
000037 7369
000038 003a
000039 3425
00003a 2073      	.DB  0x69,0x73,0x3A,0x0,0x25,0x34,0x73,0x20
00003b 6f76
00003c 746c
00003d 002e      	.DB  0x76,0x6F,0x6C,0x74,0x2E,0x0
                 _0x2000003:
00003e c080      	.DB  0x80,0xC0
                 _0x2040060:
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\adc\Avr-adc\List\adc.asm(1118): warning: .cseg .db misalignment - padding zero byte
00003f 0001      	.DB  0x1
                 _0x2040000:
000040 4e2d
000041 4e41
000042 4900
000043 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\adc\Avr-adc\List\adc.asm(1121): warning: .cseg .db misalignment - padding zero byte
000044 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000045 0002      	.DW  0x02
000046 0260      	.DW  __base_y_G100
000047 007c      	.DW  _0x2000003*2
                 
000048 0001      	.DW  0x01
000049 0264      	.DW  __seed_G102
00004a 007e      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00004b 0000      	.DW  0
                 
                 __RESET:
00004c 94f8      	CLI
00004d 27ee      	CLR  R30
00004e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bffb      	OUT  GICR,R31
000051 bfeb      	OUT  GICR,R30
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000053 e1f8      	LDI  R31,0x18
000054 bdf1      	OUT  WDTCR,R31
000055 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 0089 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega32
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*****************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>      //use for call sprinf function in line 85.
                 ;#include <stdlib.h>     //use for call ftoa function in line 84.
                 ;
                 ;#define ADC_VREF_TYPE 0x20
                 ;
                 ;
                 ;unsigned char read_adc(unsigned char adc_input) //this function read signal from spaceficed pin in adc_input.
                 ; 0000 0013 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0000 0014 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);   //change channel.
00007c 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00007d 81e8      	LD   R30,Y
00007e 62e0      	ORI  R30,0x20
00007f b9e7      	OUT  0x7,R30
                 ; 0000 0015 delay_us(10);          //wait for change channel.
                +
000080 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000081 958a     +DEC R24
000082 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0016 
                 ; 0000 0017 ADCSRA|=0x40;          //start the AD conversion.
000083 9a36      	SBI  0x6,6
                 ; 0000 0018 while ((ADCSRA & 0x10)==0);    //wait for the AD conversion to complete.
                 _0x3:
000084 9b34      	SBIS 0x6,4
000085 cffe      	RJMP _0x3
                 ; 0000 0019 
                 ; 0000 001A ADCSRA|=0x10;          //clear interrupt flag.
000086 9a34      	SBI  0x6,4
                 ; 0000 001B return ADCH;
000087 b1e5      	IN   R30,0x5
000088 c0e7      	RJMP _0x20C0005
                 ; 0000 001C }
                 ;
                 ;void main(void)
                 ; 0000 001F {
                 _main:
                 ; 0000 0020 unsigned char init_result[7],lcd_result[10];
                 ; 0000 0021 double bss;
                 ; 0000 0022 
                 ; 0000 0023 ADMUX=ADC_VREF_TYPE & 0xff;
000089 9765      	SBIW R28,21
                 ;	init_result -> Y+14
                 ;	lcd_result -> Y+4
                 ;	bss -> Y+0
00008a e2e0      	LDI  R30,LOW(32)
00008b b9e7      	OUT  0x7,R30
                 ; 0000 0024 ADCSRA=0x86;          //initiate AD for 125kHz clock, 8 bit result and AREF pin as voltage reference.
00008c e8e6      	LDI  R30,LOW(134)
00008d b9e6      	OUT  0x6,R30
                 ; 0000 0025 
                 ; 0000 0026 lcd_init(16);   //lcd connect to port D and 16 line mode.
00008e e1a0      	LDI  R26,LOW(16)
00008f d0b4      	RCALL _lcd_init
                 ; 0000 0027 
                 ; 0000 0028 while (1)
                 _0x6:
                 ; 0000 0029       {
                 ; 0000 002A         bss=read_adc(5);
000090 e0a5      	LDI  R26,LOW(5)
000091 dfea      	RCALL _read_adc
000092 27ff      	CLR  R31
000093 2766      	CLR  R22
000094 2777      	CLR  R23
000095 940e 0547 	CALL __CDF1
000097 940e 044f 	CALL SUBOPT_0x0
                 ; 0000 002B         bss=bss*(3.3/256);
000099 940e 06ac 	CALL __GETD2S0
                +
00009b e3e3     +LDI R30 , LOW ( 0x3C533333 )
00009c e3f3     +LDI R31 , HIGH ( 0x3C533333 )
00009d e563     +LDI R22 , BYTE3 ( 0x3C533333 )
00009e e37c     +LDI R23 , BYTE4 ( 0x3C533333 )
                 	__GETD1N 0x3C533333
00009f 940e 05d1 	CALL __MULF12
0000a1 940e 044f 	CALL SUBOPT_0x0
                 ; 0000 002C         lcd_clear();
0000a3 d05d      	RCALL _lcd_clear
                 ; 0000 002D         lcd_gotoxy(0,0);
0000a4 e0e0      	LDI  R30,LOW(0)
0000a5 93ea      	ST   -Y,R30
0000a6 e0a0      	LDI  R26,LOW(0)
0000a7 d04c      	RCALL _lcd_gotoxy
                 ; 0000 002E         lcd_putsf("voltage is:");
                +
0000a8 e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000a9 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000aa d086      	RCALL _lcd_putsf
                 ; 0000 002F         ftoa(bss,2,init_result);
0000ab 940e 0452 	CALL SUBOPT_0x1
0000ad 940e 06b6 	CALL __PUTPARD1
0000af e0e2      	LDI  R30,LOW(2)
0000b0 93ea      	ST   -Y,R30
0000b1 01de      	MOVW R26,R28
0000b2 9653      	ADIW R26,19
0000b3 940e 031d 	CALL _ftoa
                 ; 0000 0030         sprintf(lcd_result,"%4s volt.",init_result);
0000b5 01fe      	MOVW R30,R28
0000b6 9634      	ADIW R30,4
0000b7 93fa      	ST   -Y,R31
0000b8 93ea      	ST   -Y,R30
                +
0000b9 e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
0000ba e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
0000bb 93fa      	ST   -Y,R31
0000bc 93ea      	ST   -Y,R30
0000bd 01fe      	MOVW R30,R28
0000be 9672      	ADIW R30,18
0000bf 2766      	CLR  R22
0000c0 2777      	CLR  R23
0000c1 940e 06b6 	CALL __PUTPARD1
0000c3 e084      	LDI  R24,4
0000c4 940e 02e9 	CALL _sprintf
0000c6 9628      	ADIW R28,8
                 ; 0000 0031 
                 ; 0000 0032         lcd_gotoxy(0,1);
0000c7 e0e0      	LDI  R30,LOW(0)
0000c8 93ea      	ST   -Y,R30
0000c9 e0a1      	LDI  R26,LOW(1)
0000ca d029      	RCALL _lcd_gotoxy
                 ; 0000 0033         lcd_puts(lcd_result);
0000cb 01de      	MOVW R26,R28
0000cc 9614      	ADIW R26,4
0000cd d054      	RCALL _lcd_puts
                 ; 0000 0034 
                 ; 0000 0035         delay_ms(350);
0000ce e5ae      	LDI  R26,LOW(350)
0000cf e0b1      	LDI  R27,HIGH(350)
0000d0 940e 04d1 	CALL _delay_ms
                 ; 0000 0036       }
0000d2 cfbd      	RJMP _0x6
                 ; 0000 0037 }
                 _0x9:
0000d3 cfff      	RJMP _0x9
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
0000d4 93aa      	ST   -Y,R26
0000d5 b3e2      	IN   R30,0x12
0000d6 70ef      	ANDI R30,LOW(0xF)
0000d7 2fae      	MOV  R26,R30
0000d8 81e8      	LD   R30,Y
0000d9 7fe0      	ANDI R30,LOW(0xF0)
0000da 2bea      	OR   R30,R26
0000db bbe2      	OUT  0x12,R30
                +
0000dc e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0000dd 958a     +DEC R24
0000de f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0000df 9a92      	SBI  0x12,2
                +
0000e0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e1 958a     +DEC R24
0000e2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e3 9892      	CBI  0x12,2
                +
0000e4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e5 958a     +DEC R24
0000e6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e7 c088      	RJMP _0x20C0005
                 __lcd_write_data:
0000e8 93aa      	ST   -Y,R26
0000e9 81a8      	LD   R26,Y
0000ea dfe9      	RCALL __lcd_write_nibble_G100
0000eb 81e8          ld    r30,y
0000ec 95e2          swap  r30
0000ed 83e8          st    y,r30
0000ee 81a8      	LD   R26,Y
0000ef dfe4      	RCALL __lcd_write_nibble_G100
                +
0000f0 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000f1 958a     +DEC R24
0000f2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000f3 c07c      	RJMP _0x20C0005
                 _lcd_gotoxy:
0000f4 93aa      	ST   -Y,R26
0000f5 81e8      	LD   R30,Y
0000f6 e0f0      	LDI  R31,0
0000f7 5ae0      	SUBI R30,LOW(-__base_y_G100)
0000f8 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000f9 81e0      	LD   R30,Z
0000fa 81a9      	LDD  R26,Y+1
0000fb 0fae      	ADD  R26,R30
0000fc dfeb      	RCALL __lcd_write_data
0000fd 8059      	LDD  R5,Y+1
0000fe 8048      	LDD  R4,Y+0
0000ff 9622      	ADIW R28,2
000100 9508      	RET
                 _lcd_clear:
000101 e0a2      	LDI  R26,LOW(2)
000102 940e 0455 	CALL SUBOPT_0x2
000104 e0ac      	LDI  R26,LOW(12)
000105 dfe2      	RCALL __lcd_write_data
000106 e0a1      	LDI  R26,LOW(1)
000107 940e 0455 	CALL SUBOPT_0x2
000109 e0e0      	LDI  R30,LOW(0)
00010a 2e4e      	MOV  R4,R30
00010b 2e5e      	MOV  R5,R30
00010c 9508      	RET
                 _lcd_putchar:
00010d 93aa      	ST   -Y,R26
00010e 81a8      	LD   R26,Y
00010f 30aa      	CPI  R26,LOW(0xA)
000110 f011      	BREQ _0x2000005
000111 1457      	CP   R5,R7
000112 f048      	BRLO _0x2000004
                 _0x2000005:
000113 e0e0      	LDI  R30,LOW(0)
000114 93ea      	ST   -Y,R30
000115 9443      	INC  R4
000116 2da4      	MOV  R26,R4
000117 dfdc      	RCALL _lcd_gotoxy
000118 81a8      	LD   R26,Y
000119 30aa      	CPI  R26,LOW(0xA)
00011a f409      	BRNE _0x2000007
00011b c054      	RJMP _0x20C0005
                 _0x2000007:
                 _0x2000004:
00011c 9453      	INC  R5
00011d 9a90      	SBI  0x12,0
00011e 81a8      	LD   R26,Y
00011f dfc8      	RCALL __lcd_write_data
000120 9890      	CBI  0x12,0
000121 c04e      	RJMP _0x20C0005
                 _lcd_puts:
000122 93ba      	ST   -Y,R27
000123 93aa      	ST   -Y,R26
000124 931a      	ST   -Y,R17
                 _0x2000008:
000125 81a9      	LDD  R26,Y+1
000126 81ba      	LDD  R27,Y+1+1
000127 91ed      	LD   R30,X+
000128 83a9      	STD  Y+1,R26
000129 83ba      	STD  Y+1+1,R27
00012a 2f1e      	MOV  R17,R30
00012b 30e0      	CPI  R30,0
00012c f019      	BREQ _0x200000A
00012d 2fa1      	MOV  R26,R17
00012e dfde      	RCALL _lcd_putchar
00012f cff5      	RJMP _0x2000008
                 _0x200000A:
000130 c010      	RJMP _0x20C0006
                 _lcd_putsf:
000131 93ba      	ST   -Y,R27
000132 93aa      	ST   -Y,R26
000133 931a      	ST   -Y,R17
                 _0x200000B:
000134 81e9      	LDD  R30,Y+1
000135 81fa      	LDD  R31,Y+1+1
000136 9631      	ADIW R30,1
000137 83e9      	STD  Y+1,R30
000138 83fa      	STD  Y+1+1,R31
000139 9731      	SBIW R30,1
00013a 91e4      	LPM  R30,Z
00013b 2f1e      	MOV  R17,R30
00013c 30e0      	CPI  R30,0
00013d f019      	BREQ _0x200000D
00013e 2fa1      	MOV  R26,R17
00013f dfcd      	RCALL _lcd_putchar
000140 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0006:
000141 8118      	LDD  R17,Y+0
000142 9623      	ADIW R28,3
000143 9508      	RET
                 _lcd_init:
000144 93aa      	ST   -Y,R26
000145 b3e1      	IN   R30,0x11
000146 6fe0      	ORI  R30,LOW(0xF0)
000147 bbe1      	OUT  0x11,R30
000148 9a8a      	SBI  0x11,2
000149 9a88      	SBI  0x11,0
00014a 9a89      	SBI  0x11,1
00014b 9892      	CBI  0x12,2
00014c 9890      	CBI  0x12,0
00014d 9891      	CBI  0x12,1
00014e 8078      	LDD  R7,Y+0
00014f 81e8      	LD   R30,Y
000150 58e0      	SUBI R30,-LOW(128)
                +
000151 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000153 81e8      	LD   R30,Y
000154 54e0      	SUBI R30,-LOW(192)
                +
000155 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000157 e1a4      	LDI  R26,LOW(20)
000158 e0b0      	LDI  R27,0
000159 940e 04d1 	CALL _delay_ms
00015b 940e 045b 	CALL SUBOPT_0x3
00015d 940e 045b 	CALL SUBOPT_0x3
00015f 940e 045b 	CALL SUBOPT_0x3
000161 e2a0      	LDI  R26,LOW(32)
000162 df71      	RCALL __lcd_write_nibble_G100
                +
000163 ec88     +LDI R24 , LOW ( 200 )
000164 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000165 9701     +SBIW R24 , 1
000166 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000167 e2a8      	LDI  R26,LOW(40)
000168 df7f      	RCALL __lcd_write_data
000169 e0a4      	LDI  R26,LOW(4)
00016a df7d      	RCALL __lcd_write_data
00016b e8a5      	LDI  R26,LOW(133)
00016c df7b      	RCALL __lcd_write_data
00016d e0a6      	LDI  R26,LOW(6)
00016e df79      	RCALL __lcd_write_data
00016f df91      	RCALL _lcd_clear
                 _0x20C0005:
000170 9621      	ADIW R28,1
000171 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
000172 93ba      	ST   -Y,R27
000173 93aa      	ST   -Y,R26
000174 931a      	ST   -Y,R17
000175 930a      	ST   -Y,R16
000176 81aa      	LDD  R26,Y+2
000177 81bb      	LDD  R27,Y+2+1
000178 9612      	ADIW R26,2
000179 940e 069f 	CALL __GETW1P
00017b 9730      	SBIW R30,0
00017c f159      	BREQ _0x2020010
00017d 81aa      	LDD  R26,Y+2
00017e 81bb      	LDD  R27,Y+2+1
00017f 9614      	ADIW R26,4
000180 940e 069f 	CALL __GETW1P
000182 018f      	MOVW R16,R30
000183 9730      	SBIW R30,0
000184 f061      	BREQ _0x2020012
                +
000185 3002     +CPI R16 , LOW ( 2 )
000186 e0e0     +LDI R30 , HIGH ( 2 )
000187 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000188 f0f0      	BRLO _0x2020013
000189 01f8      	MOVW R30,R16
00018a 9731      	SBIW R30,1
00018b 018f      	MOVW R16,R30
                +
00018c 81aa     +LDD R26 , Y + 2
00018d 81bb     +LDD R27 , Y + 2 + 1
00018e 9614     +ADIW R26 , 4
00018f 93ed     +ST X + , R30
000190 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000191 81aa      	LDD  R26,Y+2
000192 81bb      	LDD  R27,Y+2+1
000193 9612      	ADIW R26,2
000194 91ed      	LD   R30,X+
000195 91fd      	LD   R31,X+
000196 9631      	ADIW R30,1
000197 93fe      	ST   -X,R31
000198 93ee      	ST   -X,R30
000199 9731      	SBIW R30,1
00019a 81ac      	LDD  R26,Y+4
00019b 83a0      	STD  Z+0,R26
00019c 81aa      	LDD  R26,Y+2
00019d 81bb      	LDD  R27,Y+2+1
00019e 940e 069f 	CALL __GETW1P
0001a0 23ff      	TST  R31
0001a1 f02a      	BRMI _0x2020014
0001a2 91ed      	LD   R30,X+
0001a3 91fd      	LD   R31,X+
0001a4 9631      	ADIW R30,1
0001a5 93fe      	ST   -X,R31
0001a6 93ee      	ST   -X,R30
                 _0x2020014:
                 _0x2020013:
0001a7 c006      	RJMP _0x2020015
                 _0x2020010:
0001a8 81aa      	LDD  R26,Y+2
0001a9 81bb      	LDD  R27,Y+2+1
0001aa efef      	LDI  R30,LOW(65535)
0001ab efff      	LDI  R31,HIGH(65535)
0001ac 93ed      	ST   X+,R30
0001ad 93fc      	ST   X,R31
                 _0x2020015:
0001ae 8119      	LDD  R17,Y+1
0001af 8108      	LDD  R16,Y+0
0001b0 9625      	ADIW R28,5
0001b1 9508      	RET
                 __print_G101:
0001b2 93ba      	ST   -Y,R27
0001b3 93aa      	ST   -Y,R26
0001b4 9726      	SBIW R28,6
0001b5 940e 06cd 	CALL __SAVELOCR6
0001b7 e010      	LDI  R17,0
0001b8 85ac      	LDD  R26,Y+12
0001b9 85bd      	LDD  R27,Y+12+1
0001ba e0e0      	LDI  R30,LOW(0)
0001bb e0f0      	LDI  R31,HIGH(0)
0001bc 93ed      	ST   X+,R30
0001bd 93fc      	ST   X,R31
                 _0x2020016:
0001be 89ea      	LDD  R30,Y+18
0001bf 89fb      	LDD  R31,Y+18+1
0001c0 9631      	ADIW R30,1
0001c1 8bea      	STD  Y+18,R30
0001c2 8bfb      	STD  Y+18+1,R31
0001c3 9731      	SBIW R30,1
0001c4 91e4      	LPM  R30,Z
0001c5 2f2e      	MOV  R18,R30
0001c6 30e0      	CPI  R30,0
0001c7 f411      	BRNE PC+3
0001c8 940c 02e1 	JMP _0x2020018
0001ca 2fe1      	MOV  R30,R17
0001cb 30e0      	CPI  R30,0
0001cc f439      	BRNE _0x202001C
0001cd 3225      	CPI  R18,37
0001ce f411      	BRNE _0x202001D
0001cf e011      	LDI  R17,LOW(1)
0001d0 c002      	RJMP _0x202001E
                 _0x202001D:
0001d1 940e 0463 	CALL SUBOPT_0x4
                 _0x202001E:
0001d3 c10c      	RJMP _0x202001B
                 _0x202001C:
0001d4 30e1      	CPI  R30,LOW(0x1)
0001d5 f4a9      	BRNE _0x202001F
0001d6 3225      	CPI  R18,37
0001d7 f419      	BRNE _0x2020020
0001d8 940e 0463 	CALL SUBOPT_0x4
0001da c104      	RJMP _0x20200C9
                 _0x2020020:
0001db e012      	LDI  R17,LOW(2)
0001dc e040      	LDI  R20,LOW(0)
0001dd e000      	LDI  R16,LOW(0)
0001de 322d      	CPI  R18,45
0001df f411      	BRNE _0x2020021
0001e0 e001      	LDI  R16,LOW(1)
0001e1 c0fe      	RJMP _0x202001B
                 _0x2020021:
0001e2 322b      	CPI  R18,43
0001e3 f411      	BRNE _0x2020022
0001e4 e24b      	LDI  R20,LOW(43)
0001e5 c0fa      	RJMP _0x202001B
                 _0x2020022:
0001e6 3220      	CPI  R18,32
0001e7 f411      	BRNE _0x2020023
0001e8 e240      	LDI  R20,LOW(32)
0001e9 c0f6      	RJMP _0x202001B
                 _0x2020023:
0001ea c002      	RJMP _0x2020024
                 _0x202001F:
0001eb 30e2      	CPI  R30,LOW(0x2)
0001ec f439      	BRNE _0x2020025
                 _0x2020024:
0001ed e050      	LDI  R21,LOW(0)
0001ee e013      	LDI  R17,LOW(3)
0001ef 3320      	CPI  R18,48
0001f0 f411      	BRNE _0x2020026
0001f1 6800      	ORI  R16,LOW(128)
0001f2 c0ed      	RJMP _0x202001B
                 _0x2020026:
0001f3 c004      	RJMP _0x2020027
                 _0x2020025:
0001f4 30e3      	CPI  R30,LOW(0x3)
0001f5 f011      	BREQ PC+3
0001f6 940c 02e0 	JMP _0x202001B
                 _0x2020027:
0001f8 3320      	CPI  R18,48
0001f9 f010      	BRLO _0x202002A
0001fa 332a      	CPI  R18,58
0001fb f008      	BRLO _0x202002B
                 _0x202002A:
0001fc c007      	RJMP _0x2020029
                 _0x202002B:
0001fd e0aa      	LDI  R26,LOW(10)
0001fe 9f5a      	MUL  R21,R26
0001ff 2d50      	MOV  R21,R0
000200 2fe2      	MOV  R30,R18
000201 53e0      	SUBI R30,LOW(48)
000202 0f5e      	ADD  R21,R30
000203 c0dc      	RJMP _0x202001B
                 _0x2020029:
000204 2fe2      	MOV  R30,R18
000205 36e3      	CPI  R30,LOW(0x63)
000206 f449      	BRNE _0x202002F
000207 940e 046a 	CALL SUBOPT_0x5
000209 89e8      	LDD  R30,Y+16
00020a 89f9      	LDD  R31,Y+16+1
00020b 81a4      	LDD  R26,Z+4
00020c 93aa      	ST   -Y,R26
00020d 940e 0470 	CALL SUBOPT_0x6
00020f c0cf      	RJMP _0x2020030
                 _0x202002F:
000210 37e3      	CPI  R30,LOW(0x73)
000211 f441      	BRNE _0x2020032
000212 940e 046a 	CALL SUBOPT_0x5
000214 940e 0476 	CALL SUBOPT_0x7
000216 940e 03f1 	CALL _strlen
000218 2f1e      	MOV  R17,R30
000219 c00a      	RJMP _0x2020033
                 _0x2020032:
00021a 37e0      	CPI  R30,LOW(0x70)
00021b f461      	BRNE _0x2020035
00021c 940e 046a 	CALL SUBOPT_0x5
00021e 940e 0476 	CALL SUBOPT_0x7
000220 940e 03fd 	CALL _strlenf
000222 2f1e      	MOV  R17,R30
000223 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000224 6002      	ORI  R16,LOW(2)
000225 770f      	ANDI R16,LOW(127)
000226 e030      	LDI  R19,LOW(0)
000227 c035      	RJMP _0x2020036
                 _0x2020035:
000228 36e4      	CPI  R30,LOW(0x64)
000229 f011      	BREQ _0x2020039
00022a 36e9      	CPI  R30,LOW(0x69)
00022b f411      	BRNE _0x202003A
                 _0x2020039:
00022c 6004      	ORI  R16,LOW(4)
00022d c002      	RJMP _0x202003B
                 _0x202003A:
00022e 37e5      	CPI  R30,LOW(0x75)
00022f f431      	BRNE _0x202003C
                 _0x202003B:
000230 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000231 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000232 83ee      	STD  Y+6,R30
000233 83ff      	STD  Y+6+1,R31
000234 e015      	LDI  R17,LOW(5)
000235 c00d      	RJMP _0x202003D
                 _0x202003C:
000236 35e8      	CPI  R30,LOW(0x58)
000237 f411      	BRNE _0x202003F
000238 6008      	ORI  R16,LOW(8)
000239 c004      	RJMP _0x2020040
                 _0x202003F:
00023a 37e8      	CPI  R30,LOW(0x78)
00023b f011      	BREQ PC+3
00023c 940c 02df 	JMP _0x2020071
                 _0x2020040:
00023e e5ee      	LDI  R30,LOW(_tbl16_G101*2)
00023f e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000240 83ee      	STD  Y+6,R30
000241 83ff      	STD  Y+6+1,R31
000242 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000243 ff02      	SBRS R16,2
000244 c014      	RJMP _0x2020042
000245 940e 046a 	CALL SUBOPT_0x5
000247 940e 0480 	CALL SUBOPT_0x8
000249 85ab      	LDD  R26,Y+11
00024a 23aa      	TST  R26
00024b f43a      	BRPL _0x2020043
00024c 85ea      	LDD  R30,Y+10
00024d 85fb      	LDD  R31,Y+10+1
00024e 940e 0688 	CALL __ANEGW1
000250 87ea      	STD  Y+10,R30
000251 87fb      	STD  Y+10+1,R31
000252 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000253 3040      	CPI  R20,0
000254 f011      	BREQ _0x2020044
000255 5f1f      	SUBI R17,-LOW(1)
000256 c001      	RJMP _0x2020045
                 _0x2020044:
000257 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000258 c004      	RJMP _0x2020046
                 _0x2020042:
000259 940e 046a 	CALL SUBOPT_0x5
00025b 940e 0480 	CALL SUBOPT_0x8
                 _0x2020046:
                 _0x2020036:
00025d fd00      	SBRC R16,0
00025e c011      	RJMP _0x2020047
                 _0x2020048:
00025f 1715      	CP   R17,R21
000260 f478      	BRSH _0x202004A
000261 ff07      	SBRS R16,7
000262 c008      	RJMP _0x202004B
000263 ff02      	SBRS R16,2
000264 c004      	RJMP _0x202004C
000265 7f0b      	ANDI R16,LOW(251)
000266 2f24      	MOV  R18,R20
000267 5011      	SUBI R17,LOW(1)
000268 c001      	RJMP _0x202004D
                 _0x202004C:
000269 e320      	LDI  R18,LOW(48)
                 _0x202004D:
00026a c001      	RJMP _0x202004E
                 _0x202004B:
00026b e220      	LDI  R18,LOW(32)
                 _0x202004E:
00026c 940e 0463 	CALL SUBOPT_0x4
00026e 5051      	SUBI R21,LOW(1)
00026f cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000270 2f31      	MOV  R19,R17
000271 ff01      	SBRS R16,1
000272 c017      	RJMP _0x202004F
                 _0x2020050:
000273 3030      	CPI  R19,0
000274 f0a1      	BREQ _0x2020052
000275 ff03      	SBRS R16,3
000276 c006      	RJMP _0x2020053
000277 81ee      	LDD  R30,Y+6
000278 81ff      	LDD  R31,Y+6+1
000279 9125      	LPM  R18,Z+
00027a 83ee      	STD  Y+6,R30
00027b 83ff      	STD  Y+6+1,R31
00027c c005      	RJMP _0x2020054
                 _0x2020053:
00027d 81ae      	LDD  R26,Y+6
00027e 81bf      	LDD  R27,Y+6+1
00027f 912d      	LD   R18,X+
000280 83ae      	STD  Y+6,R26
000281 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000282 940e 0463 	CALL SUBOPT_0x4
000284 3050      	CPI  R21,0
000285 f009      	BREQ _0x2020055
000286 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000287 5031      	SUBI R19,LOW(1)
000288 cfea      	RJMP _0x2020050
                 _0x2020052:
000289 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00028a e320      	LDI  R18,LOW(48)
00028b 81ee      	LDD  R30,Y+6
00028c 81ff      	LDD  R31,Y+6+1
00028d 940e 06a3 	CALL __GETW1PF
00028f 87e8      	STD  Y+8,R30
000290 87f9      	STD  Y+8+1,R31
000291 81ee      	LDD  R30,Y+6
000292 81ff      	LDD  R31,Y+6+1
000293 9632      	ADIW R30,2
000294 83ee      	STD  Y+6,R30
000295 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000296 85e8      	LDD  R30,Y+8
000297 85f9      	LDD  R31,Y+8+1
000298 85aa      	LDD  R26,Y+10
000299 85bb      	LDD  R27,Y+10+1
00029a 17ae      	CP   R26,R30
00029b 07bf      	CPC  R27,R31
00029c f050      	BRLO _0x202005C
00029d 5f2f      	SUBI R18,-LOW(1)
00029e 85a8      	LDD  R26,Y+8
00029f 85b9      	LDD  R27,Y+8+1
0002a0 85ea      	LDD  R30,Y+10
0002a1 85fb      	LDD  R31,Y+10+1
0002a2 1bea      	SUB  R30,R26
0002a3 0bfb      	SBC  R31,R27
0002a4 87ea      	STD  Y+10,R30
0002a5 87fb      	STD  Y+10+1,R31
0002a6 cfef      	RJMP _0x202005A
                 _0x202005C:
0002a7 332a      	CPI  R18,58
0002a8 f028      	BRLO _0x202005D
0002a9 ff03      	SBRS R16,3
0002aa c002      	RJMP _0x202005E
0002ab 5f29      	SUBI R18,-LOW(7)
0002ac c001      	RJMP _0x202005F
                 _0x202005E:
0002ad 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002ae fd04      	SBRC R16,4
0002af c01a      	RJMP _0x2020061
0002b0 3321      	CPI  R18,49
0002b1 f420      	BRSH _0x2020063
0002b2 85a8      	LDD  R26,Y+8
0002b3 85b9      	LDD  R27,Y+8+1
0002b4 9711      	SBIW R26,1
0002b5 f409      	BRNE _0x2020062
                 _0x2020063:
0002b6 c009      	RJMP _0x20200CA
                 _0x2020062:
0002b7 1753      	CP   R21,R19
0002b8 f010      	BRLO _0x2020067
0002b9 ff00      	SBRS R16,0
0002ba c001      	RJMP _0x2020068
                 _0x2020067:
0002bb c013      	RJMP _0x2020066
                 _0x2020068:
0002bc e220      	LDI  R18,LOW(32)
0002bd ff07      	SBRS R16,7
0002be c00b      	RJMP _0x2020069
0002bf e320      	LDI  R18,LOW(48)
                 _0x20200CA:
0002c0 6100      	ORI  R16,LOW(16)
0002c1 ff02      	SBRS R16,2
0002c2 c007      	RJMP _0x202006A
0002c3 7f0b      	ANDI R16,LOW(251)
0002c4 934a      	ST   -Y,R20
0002c5 940e 0470 	CALL SUBOPT_0x6
0002c7 3050      	CPI  R21,0
0002c8 f009      	BREQ _0x202006B
0002c9 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002ca 940e 0463 	CALL SUBOPT_0x4
0002cc 3050      	CPI  R21,0
0002cd f009      	BREQ _0x202006C
0002ce 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002cf 5031      	SUBI R19,LOW(1)
0002d0 85a8      	LDD  R26,Y+8
0002d1 85b9      	LDD  R27,Y+8+1
0002d2 9712      	SBIW R26,2
0002d3 f008      	BRLO _0x2020059
0002d4 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002d5 ff00      	SBRS R16,0
0002d6 c008      	RJMP _0x202006D
                 _0x202006E:
0002d7 3050      	CPI  R21,0
0002d8 f031      	BREQ _0x2020070
0002d9 5051      	SUBI R21,LOW(1)
0002da e2e0      	LDI  R30,LOW(32)
0002db 93ea      	ST   -Y,R30
0002dc 940e 0470 	CALL SUBOPT_0x6
0002de cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200C9:
0002df e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002e0 cedd      	RJMP _0x2020016
                 _0x2020018:
0002e1 85ac      	LDD  R26,Y+12
0002e2 85bd      	LDD  R27,Y+12+1
0002e3 940e 069f 	CALL __GETW1P
0002e5 940e 06d4 	CALL __LOADLOCR6
0002e7 9664      	ADIW R28,20
0002e8 9508      	RET
                 _sprintf:
0002e9 92ff      	PUSH R15
0002ea 2ef8      	MOV  R15,R24
0002eb 9726      	SBIW R28,6
0002ec 940e 06cf 	CALL __SAVELOCR4
0002ee 940e 0488 	CALL SUBOPT_0x9
0002f0 9730      	SBIW R30,0
0002f1 f419      	BRNE _0x2020072
0002f2 efef      	LDI  R30,LOW(65535)
0002f3 efff      	LDI  R31,HIGH(65535)
0002f4 c023      	RJMP _0x20C0004
                 _0x2020072:
0002f5 01de      	MOVW R26,R28
0002f6 9616      	ADIW R26,6
0002f7 940e 0684 	CALL __ADDW2R15
0002f9 018d      	MOVW R16,R26
0002fa 940e 0488 	CALL SUBOPT_0x9
0002fc 83ee      	STD  Y+6,R30
0002fd 83ff      	STD  Y+6+1,R31
0002fe e0e0      	LDI  R30,LOW(0)
0002ff 87e8      	STD  Y+8,R30
000300 87e9      	STD  Y+8+1,R30
000301 01de      	MOVW R26,R28
000302 961a      	ADIW R26,10
000303 940e 0684 	CALL __ADDW2R15
000305 940e 069f 	CALL __GETW1P
000307 93fa      	ST   -Y,R31
000308 93ea      	ST   -Y,R30
000309 931a      	ST   -Y,R17
00030a 930a      	ST   -Y,R16
00030b e7e2      	LDI  R30,LOW(_put_buff_G101)
00030c e0f1      	LDI  R31,HIGH(_put_buff_G101)
00030d 93fa      	ST   -Y,R31
00030e 93ea      	ST   -Y,R30
00030f 01de      	MOVW R26,R28
000310 961a      	ADIW R26,10
000311 dea0      	RCALL __print_G101
000312 019f      	MOVW R18,R30
000313 81ae      	LDD  R26,Y+6
000314 81bf      	LDD  R27,Y+6+1
000315 e0e0      	LDI  R30,LOW(0)
000316 93ec      	ST   X,R30
000317 01f9      	MOVW R30,R18
                 _0x20C0004:
000318 940e 06d6 	CALL __LOADLOCR4
00031a 962a      	ADIW R28,10
00031b 90ff      	POP  R15
00031c 9508      	RET
                 
                 	.CSEG
                 _ftoa:
00031d 93ba      	ST   -Y,R27
00031e 93aa      	ST   -Y,R26
00031f 9724      	SBIW R28,4
000320 e0e0      	LDI  R30,LOW(0)
000321 83e8      	ST   Y,R30
000322 83e9      	STD  Y+1,R30
000323 83ea      	STD  Y+2,R30
000324 e3ef      	LDI  R30,LOW(63)
000325 83eb      	STD  Y+3,R30
000326 931a      	ST   -Y,R17
000327 930a      	ST   -Y,R16
000328 85eb      	LDD  R30,Y+11
000329 85fc      	LDD  R31,Y+11+1
00032a 3fef      	CPI  R30,LOW(0xFFFF)
00032b efaf      	LDI  R26,HIGH(0xFFFF)
00032c 07fa      	CPC  R31,R26
00032d f439      	BRNE _0x204000D
00032e 940e 048f 	CALL SUBOPT_0xA
                +
000330 e8a0     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
000331 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000332 940e 03e4 	CALL _strcpyf
000334 c0ab      	RJMP _0x20C0003
                 _0x204000D:
000335 3fef      	CPI  R30,LOW(0x7FFF)
000336 e7af      	LDI  R26,HIGH(0x7FFF)
000337 07fa      	CPC  R31,R26
000338 f439      	BRNE _0x204000C
000339 940e 048f 	CALL SUBOPT_0xA
                +
00033b e8a1     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
00033c e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
00033d 940e 03e4 	CALL _strcpyf
00033f c0a0      	RJMP _0x20C0003
                 _0x204000C:
000340 85ac      	LDD  R26,Y+12
000341 23aa      	TST  R26
000342 f462      	BRPL _0x204000F
                +
000343 85e9     +LDD R30 , Y + 9
000344 85fa     +LDD R31 , Y + 9 + 1
000345 856b     +LDD R22 , Y + 9 + 2
000346 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000347 940e 04db 	CALL __ANEGF1
000349 940e 0494 	CALL SUBOPT_0xB
00034b 940e 0499 	CALL SUBOPT_0xC
00034d e2ed      	LDI  R30,LOW(45)
00034e 93ec      	ST   X,R30
                 _0x204000F:
00034f 85a8      	LDD  R26,Y+8
000350 30a7      	CPI  R26,LOW(0x7)
000351 f010      	BRLO _0x2040010
000352 e0e6      	LDI  R30,LOW(6)
000353 87e8      	STD  Y+8,R30
                 _0x2040010:
000354 8518      	LDD  R17,Y+8
                 _0x2040011:
000355 2fe1      	MOV  R30,R17
000356 5011      	SUBI R17,1
000357 30e0      	CPI  R30,0
000358 f039      	BREQ _0x2040013
000359 940e 04a0 	CALL SUBOPT_0xD
00035b 940e 04a5 	CALL SUBOPT_0xE
00035d 940e 04ac 	CALL SUBOPT_0xF
00035f cff5      	RJMP _0x2040011
                 _0x2040013:
000360 940e 04b1 	CALL SUBOPT_0x10
000362 940e 0581 	CALL __ADDF12
000364 940e 0494 	CALL SUBOPT_0xB
000366 e010      	LDI  R17,LOW(0)
                +
000367 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000368 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000369 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00036a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00036b 940e 04ac 	CALL SUBOPT_0xF
                 _0x2040014:
00036d 940e 04b1 	CALL SUBOPT_0x10
00036f 940e 0664 	CALL __CMPF12
000371 f088      	BRLO _0x2040016
000372 940e 04a0 	CALL SUBOPT_0xD
000374 940e 04ba 	CALL SUBOPT_0x11
000376 940e 04ac 	CALL SUBOPT_0xF
000378 5f1f      	SUBI R17,-LOW(1)
000379 3217      	CPI  R17,39
00037a f038      	BRLO _0x2040017
00037b 940e 048f 	CALL SUBOPT_0xA
                +
00037d e8a5     +LDI R26 , LOW ( 2 * _0x2040000 + ( 5 ) )
00037e e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW2FN _0x2040000,5
00037f 940e 03e4 	CALL _strcpyf
000381 c05e      	RJMP _0x20C0003
                 _0x2040017:
000382 cfea      	RJMP _0x2040014
                 _0x2040016:
000383 3010      	CPI  R17,0
000384 f429      	BRNE _0x2040018
000385 940e 0499 	CALL SUBOPT_0xC
000387 e3e0      	LDI  R30,LOW(48)
000388 93ec      	ST   X,R30
000389 c02c      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
00038a 2fe1      	MOV  R30,R17
00038b 5011      	SUBI R17,1
00038c 30e0      	CPI  R30,0
00038d f141      	BREQ _0x204001C
00038e 940e 04a0 	CALL SUBOPT_0xD
000390 940e 04a5 	CALL SUBOPT_0xE
                +
000392 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000393 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000394 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000395 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000396 940e 0581 	CALL __ADDF12
000398 01df      	MOVW R26,R30
000399 01cb      	MOVW R24,R22
00039a 940e 043b 	CALL _floor
00039c 940e 04ac 	CALL SUBOPT_0xF
00039e 940e 04b1 	CALL SUBOPT_0x10
0003a0 940e 061f 	CALL __DIVF21
0003a2 940e 050e 	CALL __CFD1U
0003a4 2f0e      	MOV  R16,R30
0003a5 940e 0499 	CALL SUBOPT_0xC
0003a7 940e 04c1 	CALL SUBOPT_0x12
0003a9 940e 04a0 	CALL SUBOPT_0xD
0003ab 940e 069a 	CALL __CWD1
0003ad 940e 0547 	CALL __CDF1
0003af 940e 05d1 	CALL __MULF12
0003b1 940e 04c7 	CALL SUBOPT_0x13
0003b3 940e 04cc 	CALL SUBOPT_0x14
0003b5 cfd4      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
0003b6 85e8      	LDD  R30,Y+8
0003b7 30e0      	CPI  R30,0
0003b8 f119      	BREQ _0x20C0002
0003b9 940e 0499 	CALL SUBOPT_0xC
0003bb e2ee      	LDI  R30,LOW(46)
0003bc 93ec      	ST   X,R30
                 _0x204001E:
0003bd 85e8      	LDD  R30,Y+8
0003be 50e1      	SUBI R30,LOW(1)
0003bf 87e8      	STD  Y+8,R30
0003c0 5fef      	SUBI R30,-LOW(1)
0003c1 f0d1      	BREQ _0x2040020
0003c2 940e 04c7 	CALL SUBOPT_0x13
0003c4 940e 04ba 	CALL SUBOPT_0x11
0003c6 940e 0494 	CALL SUBOPT_0xB
                +
0003c8 85e9     +LDD R30 , Y + 9
0003c9 85fa     +LDD R31 , Y + 9 + 1
0003ca 856b     +LDD R22 , Y + 9 + 2
0003cb 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0003cc 940e 050e 	CALL __CFD1U
0003ce 2f0e      	MOV  R16,R30
0003cf 940e 0499 	CALL SUBOPT_0xC
0003d1 940e 04c1 	CALL SUBOPT_0x12
0003d3 940e 04c7 	CALL SUBOPT_0x13
0003d5 940e 069a 	CALL __CWD1
0003d7 940e 0547 	CALL __CDF1
0003d9 940e 04cc 	CALL SUBOPT_0x14
0003db cfe1      	RJMP _0x204001E
                 _0x2040020:
                 _0x20C0002:
0003dc 81ae      	LDD  R26,Y+6
0003dd 81bf      	LDD  R27,Y+6+1
0003de e0e0      	LDI  R30,LOW(0)
0003df 93ec      	ST   X,R30
                 _0x20C0003:
0003e0 8119      	LDD  R17,Y+1
0003e1 8108      	LDD  R16,Y+0
0003e2 962d      	ADIW R28,13
0003e3 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
0003e4 93ba      	ST   -Y,R27
0003e5 93aa      	ST   -Y,R26
0003e6 91e9          ld   r30,y+
0003e7 91f9          ld   r31,y+
0003e8 91a9          ld   r26,y+
0003e9 91b9          ld   r27,y+
0003ea 01cd          movw r24,r26
                 strcpyf0:
0003eb 9005      	lpm  r0,z+
0003ec 920d          st   x+,r0
0003ed 2000          tst  r0
0003ee f7e1          brne strcpyf0
0003ef 01fc          movw r30,r24
0003f0 9508          ret
                 _strlen:
0003f1 93ba      	ST   -Y,R27
0003f2 93aa      	ST   -Y,R26
0003f3 91a9          ld   r26,y+
0003f4 91b9          ld   r27,y+
0003f5 27ee          clr  r30
0003f6 27ff          clr  r31
                 strlen0:
0003f7 916d          ld   r22,x+
0003f8 2366          tst  r22
0003f9 f011          breq strlen1
0003fa 9631          adiw r30,1
0003fb cffb          rjmp strlen0
                 strlen1:
0003fc 9508          ret
                 _strlenf:
0003fd 93ba      	ST   -Y,R27
0003fe 93aa      	ST   -Y,R26
0003ff 27aa          clr  r26
000400 27bb          clr  r27
000401 91e9          ld   r30,y+
000402 91f9          ld   r31,y+
                 strlenf0:
000403 9005      	lpm  r0,z+
000404 2000          tst  r0
000405 f011          breq strlenf1
000406 9611          adiw r26,1
000407 cffb          rjmp strlenf0
                 strlenf1:
000408 01fd          movw r30,r26
000409 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00040a 940e 06bb 	CALL __PUTPARD2
00040c 817b         ldd  r23,y+3
00040d 816a         ldd  r22,y+2
00040e 81f9         ldd  r31,y+1
00040f 81e8         ld   r30,y
000410 fb77         bst  r23,7
000411 0f77         lsl  r23
000412 fd67         sbrc r22,7
000413 6071         sbr  r23,1
000414 2f97         mov  r25,r23
000415 579e         subi r25,0x7e
000416 f081         breq __ftrunc0
000417 f078         brcs __ftrunc0
000418 3198         cpi  r25,24
000419 f490         brsh __ftrunc1
00041a 27aa         clr  r26
00041b 27bb         clr  r27
00041c 2788         clr  r24
                 __ftrunc2:
00041d 9408         sec
00041e 9587         ror  r24
00041f 95b7         ror  r27
000420 95a7         ror  r26
000421 959a         dec  r25
000422 f7d1         brne __ftrunc2
000423 23ea         and  r30,r26
000424 23fb         and  r31,r27
000425 2368         and  r22,r24
000426 c005         rjmp __ftrunc1
                 __ftrunc0:
000427 94e8         clt
000428 2777         clr  r23
000429 27ee         clr  r30
00042a 27ff         clr  r31
00042b 2766         clr  r22
                 __ftrunc1:
00042c 776f         cbr  r22,0x80
00042d 9576         lsr  r23
00042e f408         brcc __ftrunc3
00042f 6860         sbr  r22,0x80
                 __ftrunc3:
000430 f977         bld  r23,7
000431 91a9         ld   r26,y+
000432 91b9         ld   r27,y+
000433 9189         ld   r24,y+
000434 9199         ld   r25,y+
000435 17ea         cp   r30,r26
000436 07fb         cpc  r31,r27
000437 0768         cpc  r22,r24
000438 0779         cpc  r23,r25
000439 fb97         bst  r25,7
00043a 9508         ret
                 _floor:
00043b 940e 06bb 	CALL __PUTPARD2
00043d 940e 06ac 	CALL __GETD2S0
00043f 940e 040a 	CALL _ftrunc
000441 d00d      	RCALL SUBOPT_0x0
000442 f411          brne __floor1
                 __floor0:
000443 d00e      	RCALL SUBOPT_0x1
000444 c008      	RJMP _0x20C0001
                 __floor1:
000445 f7ee          brtc __floor0
000446 d00b      	RCALL SUBOPT_0x1
                +
000447 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000448 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000449 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00044a e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00044b 940e 057a 	CALL __SUBF12
                 _0x20C0001:
00044d 9624      	ADIW R28,4
00044e 9508      	RET
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 __seed_G102:
000264           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00044f 940e 06b1 	CALL __PUTD1S0
000451 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000452 940e 06a7 	CALL __GETD1S0
000454 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000455 940e 00e8 	CALL __lcd_write_data
000457 e0a3      	LDI  R26,LOW(3)
000458 e0b0      	LDI  R27,0
000459 940c 04d1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
00045b e3a0      	LDI  R26,LOW(48)
00045c 940e 00d4 	CALL __lcd_write_nibble_G100
                +
00045e ec88     +LDI R24 , LOW ( 200 )
00045f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000460 9701     +SBIW R24 , 1
000461 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000462 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
000463 932a      	ST   -Y,R18
000464 85ad      	LDD  R26,Y+13
000465 85be      	LDD  R27,Y+13+1
000466 85ef      	LDD  R30,Y+15
000467 89f8      	LDD  R31,Y+15+1
000468 9509      	ICALL
000469 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
00046a 89e8      	LDD  R30,Y+16
00046b 89f9      	LDD  R31,Y+16+1
00046c 9734      	SBIW R30,4
00046d 8be8      	STD  Y+16,R30
00046e 8bf9      	STD  Y+16+1,R31
00046f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000470 85ad      	LDD  R26,Y+13
000471 85be      	LDD  R27,Y+13+1
000472 85ef      	LDD  R30,Y+15
000473 89f8      	LDD  R31,Y+15+1
000474 9509      	ICALL
000475 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000476 89a8      	LDD  R26,Y+16
000477 89b9      	LDD  R27,Y+16+1
000478 9614      	ADIW R26,4
000479 940e 069f 	CALL __GETW1P
00047b 83ee      	STD  Y+6,R30
00047c 83ff      	STD  Y+6+1,R31
00047d 81ae      	LDD  R26,Y+6
00047e 81bf      	LDD  R27,Y+6+1
00047f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000480 89a8      	LDD  R26,Y+16
000481 89b9      	LDD  R27,Y+16+1
000482 9614      	ADIW R26,4
000483 940e 069f 	CALL __GETW1P
000485 87ea      	STD  Y+10,R30
000486 87fb      	STD  Y+10+1,R31
000487 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000488 01de      	MOVW R26,R28
000489 961c      	ADIW R26,12
00048a 940e 0684 	CALL __ADDW2R15
00048c 940e 069f 	CALL __GETW1P
00048e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00048f 81ee      	LDD  R30,Y+6
000490 81ff      	LDD  R31,Y+6+1
000491 93fa      	ST   -Y,R31
000492 93ea      	ST   -Y,R30
000493 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
000494 87e9     +STD Y + 9 , R30
000495 87fa     +STD Y + 9 + 1 , R31
000496 876b     +STD Y + 9 + 2 , R22
000497 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000498 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC:
000499 81ae      	LDD  R26,Y+6
00049a 81bf      	LDD  R27,Y+6+1
00049b 9611      	ADIW R26,1
00049c 83ae      	STD  Y+6,R26
00049d 83bf      	STD  Y+6+1,R27
00049e 9711      	SBIW R26,1
00049f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
0004a0 81aa     +LDD R26 , Y + 2
0004a1 81bb     +LDD R27 , Y + 2 + 1
0004a2 818c     +LDD R24 , Y + 2 + 2
0004a3 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0004a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
                +
0004a5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0004a6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0004a7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0004a8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0004a9 940e 05d1 	CALL __MULF12
0004ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
                +
0004ac 83ea     +STD Y + 2 , R30
0004ad 83fb     +STD Y + 2 + 1 , R31
0004ae 836c     +STD Y + 2 + 2 , R22
0004af 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0004b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
                +
0004b1 81ea     +LDD R30 , Y + 2
0004b2 81fb     +LDD R31 , Y + 2 + 1
0004b3 816c     +LDD R22 , Y + 2 + 2
0004b4 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0004b5 85a9     +LDD R26 , Y + 9
0004b6 85ba     +LDD R27 , Y + 9 + 1
0004b7 858b     +LDD R24 , Y + 9 + 2
0004b8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0004b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
0004ba e0e0     +LDI R30 , LOW ( 0x41200000 )
0004bb e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004bc e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004bd e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004be 940e 05d1 	CALL __MULF12
0004c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
0004c1 2fe0      	MOV  R30,R16
0004c2 5de0      	SUBI R30,-LOW(48)
0004c3 93ec      	ST   X,R30
0004c4 2fe0      	MOV  R30,R16
0004c5 e0f0      	LDI  R31,0
0004c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
                +
0004c7 85a9     +LDD R26 , Y + 9
0004c8 85ba     +LDD R27 , Y + 9 + 1
0004c9 858b     +LDD R24 , Y + 9 + 2
0004ca 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0004cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
0004cc 940e 06c0 	CALL __SWAPD12
0004ce 940e 057a 	CALL __SUBF12
0004d0 cfc3      	RJMP SUBOPT_0xB
                 
                 
                 	.CSEG
                 _delay_ms:
0004d1 9610      	adiw r26,0
0004d2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0004d3 ed80     +LDI R24 , LOW ( 0x7D0 )
0004d4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0004d5 9701     +SBIW R24 , 1
0004d6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0004d7 95a8      	wdr
0004d8 9711      	sbiw r26,1
0004d9 f7c9      	brne __delay_ms0
                 __delay_ms1:
0004da 9508      	ret
                 
                 __ANEGF1:
0004db 9730      	SBIW R30,0
0004dc 4060      	SBCI R22,0
0004dd 4070      	SBCI R23,0
0004de f009      	BREQ __ANEGF10
0004df 5870      	SUBI R23,0x80
                 __ANEGF10:
0004e0 9508      	RET
                 
                 __ROUND_REPACK:
0004e1 2355      	TST  R21
0004e2 f442      	BRPL __REPACK
0004e3 3850      	CPI  R21,0x80
0004e4 f411      	BRNE __ROUND_REPACK0
0004e5 ffe0      	SBRS R30,0
0004e6 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0004e7 9631      	ADIW R30,1
0004e8 1f69      	ADC  R22,R25
0004e9 1f79      	ADC  R23,R25
0004ea f06b      	BRVS __REPACK1
                 
                 __REPACK:
0004eb e850      	LDI  R21,0x80
0004ec 2757      	EOR  R21,R23
0004ed f411      	BRNE __REPACK0
0004ee 935f      	PUSH R21
0004ef c0cf      	RJMP __ZERORES
                 __REPACK0:
0004f0 3f5f      	CPI  R21,0xFF
0004f1 f031      	BREQ __REPACK1
0004f2 0f66      	LSL  R22
0004f3 0c00      	LSL  R0
0004f4 9557      	ROR  R21
0004f5 9567      	ROR  R22
0004f6 2f75      	MOV  R23,R21
0004f7 9508      	RET
                 __REPACK1:
0004f8 935f      	PUSH R21
0004f9 2000      	TST  R0
0004fa f00a      	BRMI __REPACK2
0004fb c0cf      	RJMP __MAXRES
                 __REPACK2:
0004fc c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0004fd e850      	LDI  R21,0x80
0004fe 2e19      	MOV  R1,R25
0004ff 2215      	AND  R1,R21
000500 0f88      	LSL  R24
000501 1f99      	ROL  R25
000502 2795      	EOR  R25,R21
000503 0f55      	LSL  R21
000504 9587      	ROR  R24
                 
                 __UNPACK1:
000505 e850      	LDI  R21,0x80
000506 2e07      	MOV  R0,R23
000507 2205      	AND  R0,R21
000508 0f66      	LSL  R22
000509 1f77      	ROL  R23
00050a 2775      	EOR  R23,R21
00050b 0f55      	LSL  R21
00050c 9567      	ROR  R22
00050d 9508      	RET
                 
                 __CFD1U:
00050e 9468      	SET
00050f c001      	RJMP __CFD1U0
                 __CFD1:
000510 94e8      	CLT
                 __CFD1U0:
000511 935f      	PUSH R21
000512 dff2      	RCALL __UNPACK1
000513 3870      	CPI  R23,0x80
000514 f018      	BRLO __CFD10
000515 3f7f      	CPI  R23,0xFF
000516 f408      	BRCC __CFD10
000517 c0a7      	RJMP __ZERORES
                 __CFD10:
000518 e156      	LDI  R21,22
000519 1b57      	SUB  R21,R23
00051a f4aa      	BRPL __CFD11
00051b 9551      	NEG  R21
00051c 3058      	CPI  R21,8
00051d f40e      	BRTC __CFD19
00051e 3059      	CPI  R21,9
                 __CFD19:
00051f f030      	BRLO __CFD17
000520 efef      	SER  R30
000521 efff      	SER  R31
000522 ef6f      	SER  R22
000523 e77f      	LDI  R23,0x7F
000524 f977      	BLD  R23,7
000525 c01a      	RJMP __CFD15
                 __CFD17:
000526 2777      	CLR  R23
000527 2355      	TST  R21
000528 f0b9      	BREQ __CFD15
                 __CFD18:
000529 0fee      	LSL  R30
00052a 1fff      	ROL  R31
00052b 1f66      	ROL  R22
00052c 1f77      	ROL  R23
00052d 955a      	DEC  R21
00052e f7d1      	BRNE __CFD18
00052f c010      	RJMP __CFD15
                 __CFD11:
000530 2777      	CLR  R23
                 __CFD12:
000531 3058      	CPI  R21,8
000532 f028      	BRLO __CFD13
000533 2fef      	MOV  R30,R31
000534 2ff6      	MOV  R31,R22
000535 2f67      	MOV  R22,R23
000536 5058      	SUBI R21,8
000537 cff9      	RJMP __CFD12
                 __CFD13:
000538 2355      	TST  R21
000539 f031      	BREQ __CFD15
                 __CFD14:
00053a 9576      	LSR  R23
00053b 9567      	ROR  R22
00053c 95f7      	ROR  R31
00053d 95e7      	ROR  R30
00053e 955a      	DEC  R21
00053f f7d1      	BRNE __CFD14
                 __CFD15:
000540 2000      	TST  R0
000541 f40a      	BRPL __CFD16
000542 d149      	RCALL __ANEGD1
                 __CFD16:
000543 915f      	POP  R21
000544 9508      	RET
                 
                 __CDF1U:
000545 9468      	SET
000546 c001      	RJMP __CDF1U0
                 __CDF1:
000547 94e8      	CLT
                 __CDF1U0:
000548 9730      	SBIW R30,0
000549 4060      	SBCI R22,0
00054a 4070      	SBCI R23,0
00054b f0b1      	BREQ __CDF10
00054c 2400      	CLR  R0
00054d f026      	BRTS __CDF11
00054e 2377      	TST  R23
00054f f412      	BRPL __CDF11
000550 9400      	COM  R0
000551 d13a      	RCALL __ANEGD1
                 __CDF11:
000552 2e17      	MOV  R1,R23
000553 e17e      	LDI  R23,30
000554 2011      	TST  R1
                 __CDF12:
000555 f032      	BRMI __CDF13
000556 957a      	DEC  R23
000557 0fee      	LSL  R30
000558 1fff      	ROL  R31
000559 1f66      	ROL  R22
00055a 1c11      	ROL  R1
00055b cff9      	RJMP __CDF12
                 __CDF13:
00055c 2fef      	MOV  R30,R31
00055d 2ff6      	MOV  R31,R22
00055e 2d61      	MOV  R22,R1
00055f 935f      	PUSH R21
000560 df8a      	RCALL __REPACK
000561 915f      	POP  R21
                 __CDF10:
000562 9508      	RET
                 
                 __SWAPACC:
000563 934f      	PUSH R20
000564 01af      	MOVW R20,R30
000565 01fd      	MOVW R30,R26
000566 01da      	MOVW R26,R20
000567 01ab      	MOVW R20,R22
000568 01bc      	MOVW R22,R24
000569 01ca      	MOVW R24,R20
00056a 2d40      	MOV  R20,R0
00056b 2c01      	MOV  R0,R1
00056c 2e14      	MOV  R1,R20
00056d 914f      	POP  R20
00056e 9508      	RET
                 
                 __UADD12:
00056f 0fea      	ADD  R30,R26
000570 1ffb      	ADC  R31,R27
000571 1f68      	ADC  R22,R24
000572 9508      	RET
                 
                 __NEGMAN1:
000573 95e0      	COM  R30
000574 95f0      	COM  R31
000575 9560      	COM  R22
000576 5fef      	SUBI R30,-1
000577 4fff      	SBCI R31,-1
000578 4f6f      	SBCI R22,-1
000579 9508      	RET
                 
                 __SUBF12:
00057a 935f      	PUSH R21
00057b df81      	RCALL __UNPACK
00057c 3890      	CPI  R25,0x80
00057d f171      	BREQ __ADDF129
00057e e850      	LDI  R21,0x80
00057f 2615      	EOR  R1,R21
                 
000580 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000581 935f      	PUSH R21
000582 df7a      	RCALL __UNPACK
000583 3890      	CPI  R25,0x80
000584 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000585 3870      	CPI  R23,0x80
000586 f121      	BREQ __ADDF128
                 __ADDF121:
000587 2f57      	MOV  R21,R23
000588 1b59      	SUB  R21,R25
000589 f12b      	BRVS __ADDF1211
00058a f412      	BRPL __ADDF122
00058b dfd7      	RCALL __SWAPACC
00058c cffa      	RJMP __ADDF121
                 __ADDF122:
00058d 3158      	CPI  R21,24
00058e f018      	BRLO __ADDF123
00058f 27aa      	CLR  R26
000590 27bb      	CLR  R27
000591 2788      	CLR  R24
                 __ADDF123:
000592 3058      	CPI  R21,8
000593 f028      	BRLO __ADDF124
000594 2fab      	MOV  R26,R27
000595 2fb8      	MOV  R27,R24
000596 2788      	CLR  R24
000597 5058      	SUBI R21,8
000598 cff9      	RJMP __ADDF123
                 __ADDF124:
000599 2355      	TST  R21
00059a f029      	BREQ __ADDF126
                 __ADDF125:
00059b 9586      	LSR  R24
00059c 95b7      	ROR  R27
00059d 95a7      	ROR  R26
00059e 955a      	DEC  R21
00059f f7d9      	BRNE __ADDF125
                 __ADDF126:
0005a0 2d50      	MOV  R21,R0
0005a1 2551      	EOR  R21,R1
0005a2 f072      	BRMI __ADDF127
0005a3 dfcb      	RCALL __UADD12
0005a4 f438      	BRCC __ADDF129
0005a5 9567      	ROR  R22
0005a6 95f7      	ROR  R31
0005a7 95e7      	ROR  R30
0005a8 9573      	INC  R23
0005a9 f413      	BRVC __ADDF129
0005aa c020      	RJMP __MAXRES
                 __ADDF128:
0005ab dfb7      	RCALL __SWAPACC
                 __ADDF129:
0005ac df3e      	RCALL __REPACK
0005ad 915f      	POP  R21
0005ae 9508      	RET
                 __ADDF1211:
0005af f7d8      	BRCC __ADDF128
0005b0 cffb      	RJMP __ADDF129
                 __ADDF127:
0005b1 1bea      	SUB  R30,R26
0005b2 0bfb      	SBC  R31,R27
0005b3 0b68      	SBC  R22,R24
0005b4 f051      	BREQ __ZERORES
0005b5 f410      	BRCC __ADDF1210
0005b6 9400      	COM  R0
0005b7 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0005b8 2366      	TST  R22
0005b9 f392      	BRMI __ADDF129
0005ba 0fee      	LSL  R30
0005bb 1fff      	ROL  R31
0005bc 1f66      	ROL  R22
0005bd 957a      	DEC  R23
0005be f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0005bf 27ee      	CLR  R30
0005c0 27ff      	CLR  R31
0005c1 2766      	CLR  R22
0005c2 2777      	CLR  R23
0005c3 915f      	POP  R21
0005c4 9508      	RET
                 
                 __MINRES:
0005c5 efef      	SER  R30
0005c6 efff      	SER  R31
0005c7 e76f      	LDI  R22,0x7F
0005c8 ef7f      	SER  R23
0005c9 915f      	POP  R21
0005ca 9508      	RET
                 
                 __MAXRES:
0005cb efef      	SER  R30
0005cc efff      	SER  R31
0005cd e76f      	LDI  R22,0x7F
0005ce e77f      	LDI  R23,0x7F
0005cf 915f      	POP  R21
0005d0 9508      	RET
                 
                 __MULF12:
0005d1 935f      	PUSH R21
0005d2 df2a      	RCALL __UNPACK
0005d3 3870      	CPI  R23,0x80
0005d4 f351      	BREQ __ZERORES
0005d5 3890      	CPI  R25,0x80
0005d6 f341      	BREQ __ZERORES
0005d7 2401      	EOR  R0,R1
0005d8 9408      	SEC
0005d9 1f79      	ADC  R23,R25
0005da f423      	BRVC __MULF124
0005db f31c      	BRLT __ZERORES
                 __MULF125:
0005dc 2000      	TST  R0
0005dd f33a      	BRMI __MINRES
0005de cfec      	RJMP __MAXRES
                 __MULF124:
0005df 920f      	PUSH R0
0005e0 931f      	PUSH R17
0005e1 932f      	PUSH R18
0005e2 933f      	PUSH R19
0005e3 934f      	PUSH R20
0005e4 2711      	CLR  R17
0005e5 2722      	CLR  R18
0005e6 2799      	CLR  R25
0005e7 9f68      	MUL  R22,R24
0005e8 01a0      	MOVW R20,R0
0005e9 9f8f      	MUL  R24,R31
0005ea 2d30      	MOV  R19,R0
0005eb 0d41      	ADD  R20,R1
0005ec 1f59      	ADC  R21,R25
0005ed 9f6b      	MUL  R22,R27
0005ee 0d30      	ADD  R19,R0
0005ef 1d41      	ADC  R20,R1
0005f0 1f59      	ADC  R21,R25
0005f1 9f8e      	MUL  R24,R30
0005f2 d027      	RCALL __MULF126
0005f3 9fbf      	MUL  R27,R31
0005f4 d025      	RCALL __MULF126
0005f5 9f6a      	MUL  R22,R26
0005f6 d023      	RCALL __MULF126
0005f7 9fbe      	MUL  R27,R30
0005f8 d01d      	RCALL __MULF127
0005f9 9faf      	MUL  R26,R31
0005fa d01b      	RCALL __MULF127
0005fb 9fae      	MUL  R26,R30
0005fc 0d11      	ADD  R17,R1
0005fd 1f29      	ADC  R18,R25
0005fe 1f39      	ADC  R19,R25
0005ff 1f49      	ADC  R20,R25
000600 1f59      	ADC  R21,R25
000601 2fe3      	MOV  R30,R19
000602 2ff4      	MOV  R31,R20
000603 2f65      	MOV  R22,R21
000604 2f52      	MOV  R21,R18
000605 914f      	POP  R20
000606 913f      	POP  R19
000607 912f      	POP  R18
000608 911f      	POP  R17
000609 900f      	POP  R0
00060a 2366      	TST  R22
00060b f02a      	BRMI __MULF122
00060c 0f55      	LSL  R21
00060d 1fee      	ROL  R30
00060e 1fff      	ROL  R31
00060f 1f66      	ROL  R22
000610 c002      	RJMP __MULF123
                 __MULF122:
000611 9573      	INC  R23
000612 f24b      	BRVS __MULF125
                 __MULF123:
000613 decd      	RCALL __ROUND_REPACK
000614 915f      	POP  R21
000615 9508      	RET
                 
                 __MULF127:
000616 0d10      	ADD  R17,R0
000617 1d21      	ADC  R18,R1
000618 1f39      	ADC  R19,R25
000619 c002      	RJMP __MULF128
                 __MULF126:
00061a 0d20      	ADD  R18,R0
00061b 1d31      	ADC  R19,R1
                 __MULF128:
00061c 1f49      	ADC  R20,R25
00061d 1f59      	ADC  R21,R25
00061e 9508      	RET
                 
                 __DIVF21:
00061f 935f      	PUSH R21
000620 dedc      	RCALL __UNPACK
000621 3870      	CPI  R23,0x80
000622 f421      	BRNE __DIVF210
000623 2011      	TST  R1
                 __DIVF211:
000624 f40a      	BRPL __DIVF219
000625 cf9f      	RJMP __MINRES
                 __DIVF219:
000626 cfa4      	RJMP __MAXRES
                 __DIVF210:
000627 3890      	CPI  R25,0x80
000628 f409      	BRNE __DIVF218
                 __DIVF217:
000629 cf95      	RJMP __ZERORES
                 __DIVF218:
00062a 2401      	EOR  R0,R1
00062b 9408      	SEC
00062c 0b97      	SBC  R25,R23
00062d f41b      	BRVC __DIVF216
00062e f3d4      	BRLT __DIVF217
00062f 2000      	TST  R0
000630 cff3      	RJMP __DIVF211
                 __DIVF216:
000631 2f79      	MOV  R23,R25
000632 931f      	PUSH R17
000633 932f      	PUSH R18
000634 933f      	PUSH R19
000635 934f      	PUSH R20
000636 2411      	CLR  R1
000637 2711      	CLR  R17
000638 2722      	CLR  R18
000639 2733      	CLR  R19
00063a 2744      	CLR  R20
00063b 2755      	CLR  R21
00063c e290      	LDI  R25,32
                 __DIVF212:
00063d 17ae      	CP   R26,R30
00063e 07bf      	CPC  R27,R31
00063f 0786      	CPC  R24,R22
000640 0741      	CPC  R20,R17
000641 f030      	BRLO __DIVF213
000642 1bae      	SUB  R26,R30
000643 0bbf      	SBC  R27,R31
000644 0b86      	SBC  R24,R22
000645 0b41      	SBC  R20,R17
000646 9408      	SEC
000647 c001      	RJMP __DIVF214
                 __DIVF213:
000648 9488      	CLC
                 __DIVF214:
000649 1f55      	ROL  R21
00064a 1f22      	ROL  R18
00064b 1f33      	ROL  R19
00064c 1c11      	ROL  R1
00064d 1faa      	ROL  R26
00064e 1fbb      	ROL  R27
00064f 1f88      	ROL  R24
000650 1f44      	ROL  R20
000651 959a      	DEC  R25
000652 f751      	BRNE __DIVF212
000653 01f9      	MOVW R30,R18
000654 2d61      	MOV  R22,R1
000655 914f      	POP  R20
000656 913f      	POP  R19
000657 912f      	POP  R18
000658 911f      	POP  R17
000659 2366      	TST  R22
00065a f032      	BRMI __DIVF215
00065b 0f55      	LSL  R21
00065c 1fee      	ROL  R30
00065d 1fff      	ROL  R31
00065e 1f66      	ROL  R22
00065f 957a      	DEC  R23
000660 f243      	BRVS __DIVF217
                 __DIVF215:
000661 de7f      	RCALL __ROUND_REPACK
000662 915f      	POP  R21
000663 9508      	RET
                 
                 __CMPF12:
000664 2399      	TST  R25
000665 f09a      	BRMI __CMPF120
000666 2377      	TST  R23
000667 f042      	BRMI __CMPF121
000668 1797      	CP   R25,R23
000669 f048      	BRLO __CMPF122
00066a f429      	BRNE __CMPF121
00066b 17ae      	CP   R26,R30
00066c 07bf      	CPC  R27,R31
00066d 0786      	CPC  R24,R22
00066e f020      	BRLO __CMPF122
00066f f031      	BREQ __CMPF123
                 __CMPF121:
000670 9498      	CLZ
000671 9488      	CLC
000672 9508      	RET
                 __CMPF122:
000673 9498      	CLZ
000674 9408      	SEC
000675 9508      	RET
                 __CMPF123:
000676 9418      	SEZ
000677 9488      	CLC
000678 9508      	RET
                 __CMPF120:
000679 2377      	TST  R23
00067a f7c2      	BRPL __CMPF122
00067b 1797      	CP   R25,R23
00067c f398      	BRLO __CMPF121
00067d f7a9      	BRNE __CMPF122
00067e 17ea      	CP   R30,R26
00067f 07fb      	CPC  R31,R27
000680 0768      	CPC  R22,R24
000681 f388      	BRLO __CMPF122
000682 f399      	BREQ __CMPF123
000683 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000684 2400      	CLR  R0
000685 0daf      	ADD  R26,R15
000686 1db0      	ADC  R27,R0
000687 9508      	RET
                 
                 __ANEGW1:
000688 95f1      	NEG  R31
000689 95e1      	NEG  R30
00068a 40f0      	SBCI R31,0
00068b 9508      	RET
                 
                 __ANEGD1:
00068c 95f0      	COM  R31
00068d 9560      	COM  R22
00068e 9570      	COM  R23
00068f 95e1      	NEG  R30
000690 4fff      	SBCI R31,-1
000691 4f6f      	SBCI R22,-1
000692 4f7f      	SBCI R23,-1
000693 9508      	RET
                 
                 __CBD1:
000694 2ffe      	MOV  R31,R30
000695 0fff      	ADD  R31,R31
000696 0bff      	SBC  R31,R31
000697 2f6f      	MOV  R22,R31
000698 2f7f      	MOV  R23,R31
000699 9508      	RET
                 
                 __CWD1:
00069a 2f6f      	MOV  R22,R31
00069b 0f66      	ADD  R22,R22
00069c 0b66      	SBC  R22,R22
00069d 2f76      	MOV  R23,R22
00069e 9508      	RET
                 
                 __GETW1P:
00069f 91ed      	LD   R30,X+
0006a0 91fc      	LD   R31,X
0006a1 9711      	SBIW R26,1
0006a2 9508      	RET
                 
                 __GETW1PF:
0006a3 9005      	LPM  R0,Z+
0006a4 91f4      	LPM  R31,Z
0006a5 2de0      	MOV  R30,R0
0006a6 9508      	RET
                 
                 __GETD1S0:
0006a7 81e8      	LD   R30,Y
0006a8 81f9      	LDD  R31,Y+1
0006a9 816a      	LDD  R22,Y+2
0006aa 817b      	LDD  R23,Y+3
0006ab 9508      	RET
                 
                 __GETD2S0:
0006ac 81a8      	LD   R26,Y
0006ad 81b9      	LDD  R27,Y+1
0006ae 818a      	LDD  R24,Y+2
0006af 819b      	LDD  R25,Y+3
0006b0 9508      	RET
                 
                 __PUTD1S0:
0006b1 83e8      	ST   Y,R30
0006b2 83f9      	STD  Y+1,R31
0006b3 836a      	STD  Y+2,R22
0006b4 837b      	STD  Y+3,R23
0006b5 9508      	RET
                 
                 __PUTPARD1:
0006b6 937a      	ST   -Y,R23
0006b7 936a      	ST   -Y,R22
0006b8 93fa      	ST   -Y,R31
0006b9 93ea      	ST   -Y,R30
0006ba 9508      	RET
                 
                 __PUTPARD2:
0006bb 939a      	ST   -Y,R25
0006bc 938a      	ST   -Y,R24
0006bd 93ba      	ST   -Y,R27
0006be 93aa      	ST   -Y,R26
0006bf 9508      	RET
                 
                 __SWAPD12:
0006c0 2e18      	MOV  R1,R24
0006c1 2f86      	MOV  R24,R22
0006c2 2d61      	MOV  R22,R1
0006c3 2e19      	MOV  R1,R25
0006c4 2f97      	MOV  R25,R23
0006c5 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0006c6 2e1b      	MOV  R1,R27
0006c7 2fbf      	MOV  R27,R31
0006c8 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0006c9 2e1a      	MOV  R1,R26
0006ca 2fae      	MOV  R26,R30
0006cb 2de1      	MOV  R30,R1
0006cc 9508      	RET
                 
                 __SAVELOCR6:
0006cd 935a      	ST   -Y,R21
                 __SAVELOCR5:
0006ce 934a      	ST   -Y,R20
                 __SAVELOCR4:
0006cf 933a      	ST   -Y,R19
                 __SAVELOCR3:
0006d0 932a      	ST   -Y,R18
                 __SAVELOCR2:
0006d1 931a      	ST   -Y,R17
0006d2 930a      	ST   -Y,R16
0006d3 9508      	RET
                 
                 __LOADLOCR6:
0006d4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0006d5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0006d6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0006d7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0006d8 8119      	LDD  R17,Y+1
0006d9 8108      	LD   R16,Y
0006da 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  36 r1 :  30 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  40 r17:  48 r18:  41 r19:  20 r20:  31 r21:  80 r22:  77 r23:  70 
r24:  60 r25:  49 r26: 157 r27:  76 r28:  22 r29:   1 r30: 260 r31: 122 
x  :  29 y  : 268 z  :  17 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  11 
adiw  :  33 and   :   5 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  37 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  21 
brlt  :   2 brmi  :  10 brne  :  47 brpl  :   9 brsh  :   3 brtc  :   2 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 117 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  39 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :  10 cpc   :  14 cpi   :  59 cpse  :   0 dec   :  14 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   4 jmp   :  26 ld    :  37 ldd   : 127 ldi   : 145 
lds   :   0 lpm   :  17 lsl   :  12 lsr   :   3 mov   :  67 movw  :  30 
mul   :  10 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   1 
ori   :   8 out   :  13 pop   :  19 push  :  19 rcall :  45 ret   :  66 
reti  :   0 rjmp  :  96 rol   :  24 ror   :  15 sbc   :   9 sbci  :  11 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  25 sbr   :   2 sbrc  :   3 
sbrs  :  11 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  85 std   :  51 sts   :   2 sub   :   5 subi  :  27 swap  :   1 
tst   :  23 wdr   :   1 
Instructions used: 78 out of 116 (67.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000db6   3442     68   3510   32768  10.7%
[.dseg] 0x000060 0x000268      0      8      8    2143   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
